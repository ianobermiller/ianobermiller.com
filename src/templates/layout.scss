$accent: #5b2b82;
$dark-accent: lighten($accent, 45%);

:root {
  --space-m: 16px;
  --space-l: 32px;
  --space-xl: 48px;

  --font-size-s: 14px;
  --font-size-m: 18px;
  --font-size-code: 15px;
  --font-size-h1: 36px;
  --font-size-h2: 24px;
  --font-size-h3: 20px;
  --font-size-title: 48px;

  --accent-color: #{$accent};
  --accent-color-hover: #{darken($accent, 20%)};
  --accent-color-quote: #{lighten($accent, 62%)};
  --background-color: #fff;
  --background-color-inline-code: #{lighten($accent, 60%)};
  --background-color-code: #{lighten($accent, 64%)};
  --text-color: #000;
  --text-color-secondary: #333;
}

@mixin darkMode() {
  --accent-color: #{$dark-accent};
  --accent-color-hover: #{lighten($dark-accent, 20%)};
  --accent-color-quote: #{darken($dark-accent, 60%)};
  --background-color: #222;
  --background-color-code: #282828;
  --background-color-inline-code: #{darken($accent, 15%)};
  --text-color: #fff;
  --text-color-secondary: #ddd;
}

@media (prefers-color-scheme: dark) {
  // Allow overriding dark with light
  :root:not(.light) {
    @include darkMode();
  }
}

// Allow overriding light with dark. Unfortunately the duplication here can't
// be avoided, since you can't mix media queries and selectors.
:root.dark {
  @include darkMode();
}

html {
  height: 100%;
  overflow: auto;
}

body {
  margin: 0;
  padding: 0;
}

body,
textarea {
  background: var(--background-color);
  color: var(--text-color);
  font-family: system-ui, -apple-system, BlinkMacSystemFont,
    'Segoe UI', Roboto, Helvetica, Arial, sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
  font-size: var(--font-size-m);
  line-height: var(--space-l);
}

#gatsby-noscript {
  display: none;
}

a {
  color: var(--accent-color);
}

a:hover {
  color: var(--accent-color-hover);
}

h1,
h2,
h3,
h4,
h5,
h6,
nav {
  &,
  & a {
    color: var(--accent-color);
    font-weight: 300;
    text-decoration: none;
  }

  & a:hover {
    color: var(--accent-color-hover);
  }
}

h1 {
  font-size: var(--font-size-h1);
  line-height: var(--space-xl);
  margin: var(--space-l) 0;
}

h2 {
  font-size: var(--font-size-h2);
  line-height: var(--space-l);
  margin: var(--space-m) 0;
}

h3 {
  font-size: var(--font-size-h3);
  line-height: var(--space-l);
  margin: var(--space-m) 0;
}

img {
  max-width: 100%;
}

.markdown {
  ul {
    list-style: disc;
    padding-left: 2em;
  }

  ol {
    list-style-type: decimal;
    padding-left: 2em;
  }

  ol ol {
    list-style-type: lower-alpha;
  }

  blockquote {
    background: var(--accent-color-quote);
    border-left: solid 4px var(--accent-color);
    margin-top: -var(--space-m);
    margin-bottom: -var(--space-m);
    margin-left: -var(--space-m);
    padding: var(--space-m) 12px;
  }

  blockquote > :first-child {
    margin-top: 0;
  }

  blockquote > :last-child {
    margin-bottom: 0;
  }

  small {
    font-size: var(--font-size-s);
  }
}

p,
ol,
ul,
pre {
  margin: var(--space-m) 0;
}

ol,
ul {
  p {
    margin: 0;
  }
}

code,
pre {
  font-family: Menlo, Monaco, Consolas,
    'Bitstream Vera Sans Mono', 'Courier New', Courier,
    monospace;
  font-size: var(--font-size-code);
  hyphens: none;
  line-height: var(--space-l);
  margin: 0;
  overflow: visible;
  white-space: pre-wrap;
}

pre {
  word-break: break-all;
}

code {
  // Prevent mixed prose and code in paragraphs from messing up the line-height
  // and throwing off the grid.
  vertical-align: top;
}

.gatsby-highlight {
  background: var(--background-color-code);
  display: block;
  margin-top: -var(--space-m);
  margin-bottom: -var(--space-m);
  margin-left: -var(--space-m);
  padding: var(--space-m);
  position: relative;

  @media screen and (min-device-width: 720px) {
    &::before {
      color: var(--accent-color);
      content: attr(data-language);
      font-size: var(--font-size-s);
      font-weight: 300;
      letter-spacing: 0.2ex;
      position: absolute;
      text-transform: uppercase;
      top: 0;
      transform-origin: right top 0;
      transform: translate(calc(-100% - 48px), 0)
        rotate(-90deg);
    }
  }
}

// Inline code
:not(pre) > code[class*='language-'] {
  background: var(--background-color-inline-code);
  border-radius: 4px;
  padding: 0.15em 0.2em 0.05em;
  white-space: normal;
}

// Prism Code Highlighting
.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: slategray;
}

.token.punctuation {
  color: #999;
}

.namespace {
  opacity: 0.7;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: #905;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: #690;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: #9a6e3a;
}

.token.atrule,
.token.attr-value,
.token.keyword {
  color: #07a;
}

.token.function,
.token.class-name {
  color: #dd4a68;
}

.token.regex,
.token.important,
.token.variable {
  color: #e90;
}

.token.important,
.token.bold {
  font-weight: bold;
}
.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}

// Markdown heading anchors
h1,
h2,
h3,
h4,
h5,
h6 {
  .anchor {
    opacity: 0;
  }

  &:hover {
    .anchor {
      opacity: 1;
    }
  }
}

.anchor {
  fill: var(--accent-color);
  position: absolute;
  left: -20px;

  &:hover {
    fill: var(--accent-color-hover);
  }
}

// Backreference for markdown footnotes
.footnote-backref {
  font-family: 'Courier New';
  margin-left: 1ch;
  font-size: 24px;
}
